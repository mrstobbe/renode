CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(renode)

INCLUDE(CheckIncludeFiles)

CHECK_INCLUDE_FILES(sys/epoll.h RENODE_HAVE_EPOLL)
IF(NOT RENODE_HAVE_EPOLL)
	SET(RENODE_HAVE_EPOLL 0)
ENDIF()
CHECK_INCLUDE_FILES(netinet/sctp.h RENODE_HAVE_SCTP)
IF(NOT RENODE_HAVE_SCTP)
	SET(RENODE_HAVE_SCTP 0)
ENDIF()

IF(NOT RENODE_BUILD_TYPE)
	SET(RENODE_BUILD_TYPE "Release")
ENDIF()

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
#TODO: Dynamically change to lib64 as needed... or maybe just on target
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
SET(ARCHIVE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)

SET(CMAKE_CXX_FLAGS "-std=c++11")
IF (RENODE_BUILD_TYPE MATCHES "Debug")
	SET(CMAKE_CXX_FLAGS_DEBUG "-O0 -Wall -ggdb")
ELSEIF (RENODE_BUILD_TYPE MATCHES "RelWithDebInfo")
	SET(CMAKE_CXX_FLAGS_DEBUG "-O3 -ggdb")
ELSEIF (RENODE_BUILD_TYPE MATCHES "MinSizeRel")
	SET(CMAKE_CXX_FLAGS_DEBUG "-Os")
ELSE()
	SET(RENODE_BUILD_TYPE "Release")
	SET(CMAKE_CXX_FLAGS_RELEASE "-O3")
ENDIF()
SET(CMAKE_BUILD_TYPE ${RENODE_BUILD_TYPE})

ADD_DEFINITIONS(
	-DRENODE_BUILD_TYPE=${RENODE_BUILD_TYPE}
	-DRENODE_HAVE_EPOLL=${RENODE_HAVE_EPOLL}
	-DRENODE_HAVE_SCTP=${RENODE_HAVE_SCTP}
)

MESSAGE("** Configured for ${CMAKE_BUILD_TYPE}")

ADD_SUBDIRECTORY(src)

